-- Root Catalog
INSERT INTO RootCatalog (description, sequence) VALUES ('Total of All OTP Codes', 1);
INSERT INTO RootCatalog (description, sequence) VALUES ('Another Root', 2);

-- OTP Code Catalog
INSERT INTO OtpCodeCatalog (root_id, name, sequence) VALUES (1, 'OTP Code 1', 1);
INSERT INTO OtpCodeCatalog (root_id, name, sequence) VALUES (1, 'OTP Code 2', 2);
INSERT INTO OtpCodeCatalog (root_id, name, sequence) VALUES (2, 'OTP Code 3', 1);

-- Difference Name Catalog
INSERT INTO DifferenceNameCatalog (otp_code_id, name, sequence) VALUES (1, 'Difference 1', 1);
INSERT INTO DifferenceNameCatalog (otp_code_id, name, sequence) VALUES (1, 'Difference 2', 2);
INSERT INTO DifferenceNameCatalog (otp_code_id, name, sequence) VALUES (2, 'Difference 3', 1);

-- Datasource Difference Mapping
INSERT INTO DatasourceDifferenceMapping (difference_name_id, value) VALUES (1, 10);
INSERT INTO DatasourceDifferenceMapping (difference_name_id, value) VALUES (2, 20);
INSERT INTO DatasourceDifferenceMapping (difference_name_id, value) VALUES (3, 30);


src/main/java/com/yourcompany/projectname/
|-- ProjectnameApplication.java
|-- controller/
|   |-- HierarchyController.java
|-- entity/
|   |-- RootCatalog.java
|   |-- OtpCodeCatalog.java
|   |-- DifferenceNameCatalog.java
|   |-- DatasourceDifferenceMapping.java
|-- repository/
|   |-- RootCatalogRepository.java
|   |-- OtpCodeCatalogRepository.java
|   |-- DifferenceNameCatalogRepository.java
|   |-- DatasourceDifferenceMappingRepository.java
|-- service/
|   |-- HierarchyService.java
|-- dto/
|   |-- HierarchyDto.java


// RootCatalog.java
package com.yourcompany.projectname.entity;

import javax.persistence.*;
import java.util.Set;

@Entity
public class RootCatalog {
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long rootId;

    private String description;
    private Integer sequence;

    @OneToMany(mappedBy = "root")
    private Set<OtpCodeCatalog> otpCodes;

    // Getters and Setters
}

// OtpCodeCatalog.java
package com.yourcompany.projectname.entity;

import javax.persistence.*;
import java.util.Set;

@Entity
public class OtpCodeCatalog {
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long otpCodeId;

    @ManyToOne
    @JoinColumn(name = "root_id")
    private RootCatalog root;

    private String name;
    private Integer sequence;

    @OneToMany(mappedBy = "otpCode")
    private Set<DifferenceNameCatalog> differences;

    // Getters and Setters
}

// DifferenceNameCatalog.java
package com.yourcompany.projectname.entity;

import javax.persistence.*;
import java.util.Set;

@Entity
public class DifferenceNameCatalog {
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long differenceNameId;

    @ManyToOne
    @JoinColumn(name = "otp_code_id")
    private OtpCodeCatalog otpCode;

    private String name;
    private Integer sequence;

    @OneToMany(mappedBy = "differenceName")
    private Set<DatasourceDifferenceMapping> values;

    // Getters and Setters
}

// DatasourceDifferenceMapping.java
package com.yourcompany.projectname.entity;

import javax.persistence.*;

@Entity
public class DatasourceDifferenceMapping {
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long differenceId;

    @ManyToOne
    @JoinColumn(name = "difference_name_id")
    private DifferenceNameCatalog differenceName;

    private Double value;

    // Getters and Setters
}

package com.yourcompany.projectname.repository;

import com.yourcompany.projectname.entity.RootCatalog;
import org.springframework.data.jpa.repository.JpaRepository;

public interface RootCatalogRepository extends JpaRepository<RootCatalog, Long> {
}

// Similar repositories for OtpCodeCatalog, DifferenceNameCatalog, and DatasourceDifferenceMapping


package com.yourcompany.projectname.dto;

import java.util.List;

public class HierarchyDto {
    private String rootDescription;
    private List<OtpCodeDto> otpCodes;

    // Getters and Setters

    public static class OtpCodeDto {
        private String name;
        private List<DifferenceDto> differences;

        // Getters and Setters
    }

    public static class DifferenceDto {
        private String name;
        private Double value;

        // Getters and Setters
    }
}


package com.yourcompany.projectname.service;

import com.yourcompany.projectname.dto.HierarchyDto;
import com.yourcompany.projectname.entity.RootCatalog;
import com.yourcompany.projectname.repository.RootCatalogRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.List;
import java.util.stream.Collectors;

@Service
public class HierarchyService {
    @Autowired
    private RootCatalogRepository rootCatalogRepository;

    public List<HierarchyDto> getHierarchy() {
        List<RootCatalog> roots = rootCatalogRepository.findAll();

        return roots.stream().map(root -> {
            HierarchyDto dto = new HierarchyDto();
            dto.setRootDescription(root.getDescription());

            List<HierarchyDto.OtpCodeDto> otpCodes = root.getOtpCodes().stream().map(otp -> {
                HierarchyDto.OtpCodeDto otpDto = new HierarchyDto.OtpCodeDto();
                otpDto.setName(otp.getName());

                List<HierarchyDto.DifferenceDto> differences = otp.getDifferences().stream().map(diff -> {
                    HierarchyDto.DifferenceDto diffDto = new HierarchyDto.DifferenceDto();
                    diffDto.setName(diff.getName());
                    diffDto.setValue(diff.getValues().stream().mapToDouble(val -> val.getValue()).sum());
                    return diffDto;
                }).collect(Collectors.toList());

                otpDto.setDifferences(differences);
                return otpDto;
            }).collect(Collectors.toList());

            dto.setOtpCodes(otpCodes);
            return dto;
        }).collect(Collectors.toList());
    }
}


package com.yourcompany.projectname.controller;

import com.yourcompany.projectname.dto.HierarchyDto;
import com.yourcompany.projectname.service.HierarchyService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import java.util.List;

@RestController
@RequestMapping("/api/hierarchy")
public class HierarchyController {
    @Autowired
    private HierarchyService hierarchyService;

    @GetMapping
    public List<HierarchyDto> getHierarchy() {
        return hierarchyService.getHierarchy();
    }
}


spring.datasource.url=jdbc:mysql://localhost:3306/your_database
spring.datasource.username=your_username
spring.datasource.password=your_password
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true


